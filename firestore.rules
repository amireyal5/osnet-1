rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---

    // Checks if the requesting user is signed in.
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Gets the user's profile document data.
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    // Correctly checks if the user's roles list contains a specific role.
    function hasRole(role) {
      // Use hasAny to check for a value within an array, and ensure roles exists.
      return isSignedIn() && 'roles' in getUserData() && getUserData().roles.hasAny([role]);
    }
    
    // Checks if the user is the owner of a document (e.g., a guest entry or survey).
    function isOwner(doc) {
      // Handles both ownerId for guests and createdBy for surveys
      return request.auth.uid == doc.data.ownerId || request.auth.uid == doc.data.createdBy;
    }

    // --- Collection Rules ---

    // Users Collection
    match /users/{userId} {
      // Allow any signed-in user to create their OWN profile upon signup.
      allow create: if isSignedIn();

      // A user can read/update their OWN profile.
      allow read, update: if isSignedIn() && request.auth.uid == userId;

      // Users with appropriate roles can list all users.
      // Only Admin can write to any user profile.
      allow list, get: if hasRole('עובד') || hasRole('מנהל מערכת') || hasRole('ראש מנהל');
      allow write: if hasRole('מנהל מערכת');
    }

    // Guests Collection
    match /guests/{guestId} {
      // Admin/Manager/Security can do anything.
      allow get, list, write, delete: if hasRole('מנהל מערכת') || hasRole('ראש מנהל') || hasRole('אבטחה');
      
      // Employee/Team Lead can create guests, and read/write/delete their OWN guests.
      allow create: if hasRole('עובד') || hasRole('ראש צוות');
      allow read, write, delete: if (hasRole('עובד') || hasRole('ראש צוות')) && isOwner(resource);
    }
    
    // Threads Collection (Conversations)
    match /threads/{threadId} {
        // Admin/Manager can do anything (for moderation).
        allow read, write, delete: if hasRole('מנהל מערכת') || hasRole('ראש מנהל');
        
        // A user who is a participant can create, read, or update a thread.
        allow create: if isSignedIn() && request.auth.uid in request.resource.data.participantIds;
        allow read, update: if isSignedIn() && request.auth.uid in resource.data.participantIds;
    }
    
    // Messages Sub-collection
    match /threads/{threadId}/messages/{messageId} {
        // Admin/Manager can read, write, and delete any message.
        allow read, write, delete: if hasRole('מנהל מערכת') || hasRole('ראש מנהל');
      
        // Participants of a thread can read and write (send/edit) messages.
        allow read, write: if (hasRole('עובד') || hasRole('ראש צוות') || hasRole('ראש מנהל')) && (
            (exists(/databases/$(database)/documents/threads/$(threadId)) && request.auth.uid in get(/databases/$(database)/documents/threads/$(threadId)).data.participantIds) ||
            (!exists(/databases/$(database)/documents/threads/$(threadId)) && request.auth.uid in getAfter(/databases/$(database)/documents/threads/$(threadId)).data.participantIds)
        );
    }

    // Weekly Plans Sub-collection
    match /users/{userId}/plans/{planId} {
      // A user has full access ONLY to their own plans.
      allow read, write, delete: if isSignedIn() && request.auth.uid == userId;
      // Roles that need access for Room Management and support.
      allow read: if hasRole('מנהל מערכת') || hasRole('ראש מנהל') || hasRole('אבטחה') || hasRole('מזכירה');
      allow write, delete: if hasRole('מנהל מערכת') || hasRole('ראש מנהל');
    }
    
    // Vehicle Requests Collection
    match /vehicleRequests/{requestId} {
        // Any signed-in employee can create a request.
        allow create: if hasRole('עובד');
        // Only managers/admins can view and manage requests.
        allow get, list, update, delete: if hasRole('מנהל מערכת') || hasRole('ראש מנהל');
    }

    // --- General Collections for Admin/Manager ---
    match /teams/{teamId} {
        // Allow any employee to read the list of teams and individual teams.
        allow get, list: if hasRole('עובד');
        
        // Allow managers and admins to have broader read access (redundant but safe).
        allow get, list: if hasRole('ראש מנהל');
        allow get, list, write, delete: if hasRole('מנהל מערכת');
    }
    
    match /units/{unitId} {
        allow get, list: if hasRole('ראש מנהל');
        allow get, list, write, delete: if hasRole('מנהל מערכת');
    }

    // --- Surveys Collection and Sub-collections ---
    match /surveys/{surveyId} {
      // Any signed-in user can view the list of surveys and read a specific survey's structure.
      allow read: if isSignedIn();
      
      // Only admins/managers can create, update, or delete surveys.
      allow create, update, delete: if hasRole('מנהל מערכת') || hasRole('ראש מנהל') || hasRole('ראש צוות') || hasRole('תחשיבנית');
      
      // Responses sub-collection
      match /responses/{responseId} {
        // Any signed-in user can create their own response (once).
        allow create: if isSignedIn() && request.auth.uid == responseId;
        
        // A user can read their own response.
        allow read: if isSignedIn() && request.auth.uid == responseId;
        
        // Admins, managers, or the survey creator can list and read all responses.
        allow list, get: if hasRole('מנהל מערכת') || hasRole('ראש מנהל') || isOwner(get(/databases/$(database)/documents/surveys/$(surveyId)));
      }
    }
  }
}
